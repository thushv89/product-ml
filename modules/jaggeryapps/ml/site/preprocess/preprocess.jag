<!doctype html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>WSO2 Machine Learner</title>
    <link href="../../css/bootstrap.css" rel="stylesheet">
    <link href="../../css/custom.css" rel="stylesheet">
    <link href="../../css/jquery.dataTables.min.css" rel="stylesheet">
    <link href="../../css/custom-theme.css" rel="stylesheet">

    <link rel="stylesheet" type="text/css" href="../../css/d3.parsets.css">
    <link rel="stylesheet" type="text/css" href="../../css/data.css">
    <link rel="stylesheet" type="text/css" href="../../css/wso2.ml.graphs.css">

    <script src="../../js/respond.min.js"></script>
    
    <script src="../../js/d3.v3.min.js"></script>
    <script src="../../js/d3.js"></script>
    <script src="../../js/nv.d3.js"></script>    
    <script src="../../js/wso2.ml.graphs.js"></script>
    
    <script src="../../js/jquery-1.11.1.min.js"></script>    

    <%
        include("../../includes/tenantAware.jag");
        print('<script> var authEncoded = "'+session.get("authEncoded")+'"; </script>');
    %> 

</head>

<body>

<div class="container col-lg-12 col-md-12 col-sm-12">

<!-- header -->
<header>
<div class="row wr-global-header">
	<div class="col-sm-8 app-logo"><img src="../../images/logo.png" /><h2 class="app-title">Machine Learner</h2>
	</div>
	<div class="col-sm-4">
		<div class="wr-auth pull-right">
			<a href="#" data-toggle="dropdown" class="cu-ico-right-button cu-ico-button-user"><% print(session.get("logged.user")); %></a>
			<div class="dropdown-menu">
				<div class="cu-arrow"></div>
				<div class="dropdown-menu-content">
					<a href="../logout/logout.jag" id="log-out" class="filter-item">Logout</a>
				</div>
			</div>			
		</div>
	</div>
</div>
</header>
<!-- /header -->

<!-- secondary header - app bar -->
<div id="nav" class="row wr-app-bar">
	<div class="col-md-9 wr-action-container">
        <div class="wr-project">
            <span class="title">PROJECTS \ </span><span id="nav-project"></span><span id="nav-analysis"></span>
        </div>

		<div class="wr-action-btn-bar">
			<a href="#" class="cu-btn btn-cancel" id="cancel-analysis">Cancel</a>
		</div>
	</div>

	<div class="col-md-3 wr-wiz-nav">
		<div class="wr-secondary-links pull-right">
            <div class="ctrl-wiz-nav">
    			<a href="#" id="next-btn" class="cu-btn-reverse btn-next">Next</a>
    		</div>
        </div>
	</div>
</div>
<!-- secondary header - app bar -->


<!-- content/body -->
<div class="row">
	<div class="col-lg-12 wr-secondary-bar">
		
		<!-- Wizard -->
	    <ul class="nav nav-pills nav-wizard">
            <li class="active"><div class="nav-wedge"></div><a href="#" data-toggle="tab"><span class="nav-wedge-step">Step 1</span>Preprocess</a><div class="nav-arrow"></div></li>
            <li><div class="nav-wedge"></div><a href="#" data-toggle="tab"><span class="nav-wedge-step">Step 2</span>Explore</a><div class="nav-arrow"></div></li>
            <li><div class="nav-wedge"></div><a href="#" data-toggle="tab"><span class="nav-wedge-step">Step 3</span>Algorithms</a><div class="nav-arrow"></div></li>
            <li><div class="nav-wedge"></div><a href="#" data-toggle="tab"><span class="nav-wedge-step">Step 4</span>Parameters</a><div class="nav-arrow"></div></li>
            <li><div class="nav-wedge"></div><a href="#" data-toggle="tab"><span class="nav-wedge-step">Step 5</span>Model</a><div class="nav-arrow"></div></li>
	    </ul>

		
	</div>
</div>
<div class="row">
	<div class="col-md-12">
		<!-- content -->
		<div class="container col-md-12 col-centered wr-content">

            <div id="notification-area"></div>
            <h1 class="title">Summary statistics for a random sample of the dataset</h1>
			    	<!--h4>Pre Process Data</h4-->				    	
			<table id="datasetTable">
                <!-- <div>Summary Statistics for the first 10,000 data rows: </div> -->
                <thead>
                    <tr>
                        <th>Feature</th>
                        <th>Include</th>
                        <th>Type</th>
                        <th>Summary Statistics</th>
                        <th>Impute</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
		</div>
		<!-- /content -->
	</div>
</div>
<!-- /content/body -->

</div>
    
<!--footer class="footer">
        <p>&copy; 2014 WSO2 Inc. All Rights Reserved</p>
</footer-->

<script src="../../js/d3.v3.min.js" charset="utf-8"></script>
<script src="../../js/wso2.ml.util.js"></script>
<script src="../../js/bootstrap.min.js"></script>
<script src="../../js/jquery.dataTables.js"></script>
    
<script src="../../js/d3.parsets.js"></script>
<script src="../../js/figue.js"></script>

<script type="text/javascript">

var serverUrl = window.location.origin;
var datasetId = getParameterByName('datasetId');
var analysisName = getParameterByName('analysisName');
var analysisId = getParameterByName('analysisId');
var fromAnalysis = getParameterByName('fromAnalysis');
var fromAnalysis = getParameterByName('fromAnalysis');

$( document ).ready(function() {

	$('#nav').affix({
	      offset: {
	        top: $('header').height()
	      }
	});

    // put path in application navigator
    var projectName = getParameterByName('projectName');
    $('#nav-project').text(projectName);
    $('#nav-analysis').text(" \\ "+analysisName);

    $('#next-btn').on('click', function(e) {
        e.preventDefault();	    
        // set customized features
	    var customizedFeatures = [];
	    
        var datasetTable = $('#datasetTable').dataTable();

        var features =  datasetTable.$(".feature", {"page": "all"});
        var fieldTypes =  datasetTable.$(".fieldType", {"page": "all"});        
        var includeFeatures =  datasetTable.$(".includeFeature", {"page": "all"});
        var imputeMethods =  datasetTable.$(".imputeMethod", {"page": "all"});

        for(var i = 0; i < features.length; i++) {
            var featureRow = {};
            featureRow['type'] = $(fieldTypes[i]).val();
            featureRow['name'] = $(features[i]).html();
            featureRow['include'] = $(includeFeatures[i]).is(':checked');
            featureRow['imputeOption'] = $(imputeMethods[i]).val();

            customizedFeatures.push(featureRow);            
        }
        
        $.ajax({
	        type: 'POST',
	        headers: {
        		"Accept" : "application/json",         
                "Content-Type": "application/json"   
  			},
  			url: serverUrl+"/api/analyses/"+analysisId+"/features",
	        async : false,            
	        /*beforeSend : function(xhr) {
	            xhr.setRequestHeader("Authorization", "Basic " + authEncoded);
	        },*/
	        data: JSON.stringify(customizedFeatures),
	        success: function(res){
	            console.log("Customized features set.");
                window.location.href = '../explore/explore.jag?projectName='+projectName+'&analysisName='+analysisName+'&analysisId='+analysisId+'&datasetId='+datasetId+'&fromAnalysis='+fromAnalysis;
	        },
	        error: function(res){
                var errorText = res.responseText
                handleNotification(errorText, '#notification-area', 'warning');
	        }
	    });	    
    });

    // function that cancels an analysis
    $('#cancel-analysis').on('click', function(e){
        e.preventDefault();
        // if navigation is from analysis page do not delete the analysis
        if (fromAnalysis == 'true') {
            window.location.href = '../analysis/analysis.jag?analysisId='+analysisId+'&datasetId='+datasetId+'&projectName='+projectName+'&analysisName='+analysisName;
        }
        else {
            $.ajax({
                type: 'DELETE',
                url: serverUrl+"/api/analyses/"+analysisId,
                /*beforeSend : function(xhr) {
                    xhr.setRequestHeader("Authorization", "Basic " + authEncoded);
                },*/
                success: function(res){
                    window.location.href = '../project/projects.jag';
                },
                error: function(res){
                    var errorText = res.responseText
                    handleNotification(errorText, '#notification-area', 'warning');
                }
            });            
        }
    });

    // redraw summary stats charts when feature type is changed
    $(document).on('change', '.fieldType', function(e){ 
        drawSummaryStatistics();
    });    

    $.ajax({
        type: "GET",
        url: serverUrl+"/api/analyses/"+analysisId+"/summarizedFeatures?limit=0&offset=0",        
        async: false,
        /*beforeSend : function(xhr) {
            xhr.setRequestHeader("Authorization", "Basic " + authEncoded);
        },*/
        success : function(res){
        	var features = res;
            var tableData = "";
            for (var i=0; i<features.length; i++) {
                
                tableData += '<tr class="dataRow">' +
                				'<td><span class="feature">' + features[i]['fieldName'] + '</span></td>' +
                				'<td>'+checkboxRenderer(features[i]['input'])+'</td>' +
                				'<td>'+listSelectionRenderer({"categorical" : "CATEGORICAL","numerical" : "NUMERICAL"}, features[i]['type'].toString(),"fieldType")+'</td>' +
                				// quote type change to avoid conflict with summaryStats object quotes
                                "<td><div class='summaryStatistics' data-summarystatistics='" + features[i]["summaryStats"] + "'>" + features[i]["summaryStats"] + "</div></td>" +
                				'<td>'+listSelectionRenderer({"discard":"DISCARD","regressionImputation":"REGRESSION_IMPUTATION","replaceWithMean":"REPLACE_WTH_MEAN"}, features[i]['imputeOperation'].toString(),"imputeMethod")+'</td>' +
                			 '</tr>';
            }
            $('#datasetTable tbody').append(tableData);
        },
        error : function(res){
                var errorText = res.responseText
            handleNotification(errorText, '#notification-area', 'warning');
        }
    });
    // draw histograms or pie charts (according to feature type) for summary stats
    drawSummaryStatistics();

	// draw table with DataTables
	$('#datasetTable').dataTable( {
	    "drawCallback": function( settings ) {
	        // disable fields if the model is built from an existing analysis
            if(fromAnalysis == 'true') {
                var datasetTable = $('#datasetTable').dataTable();
                datasetTable.$(".fieldType", {"page": "all"}).attr("disabled","disabled");
                datasetTable.$(".includeFeature", {"page": "all"}).attr("disabled","disabled");
                datasetTable.$(".imputeMethod", {"page": "all"}).attr("disabled","disabled");
            }
	    }
	});

    // Preserve pagination when refreshing datatable 
    $.fn.dataTableExt.oApi.fnStandingRedraw = function(oSettings) {
        if(oSettings.oFeatures.bServerSide === false){
            var before = oSettings._iDisplayStart;
            oSettings.oApi._fnReDraw(oSettings);
            oSettings._iDisplayStart = before;
            oSettings.oApi._fnCalculateEnd(oSettings);
        }
        //draw the 'current' page
        oSettings.oApi._fnDraw(oSettings);
    };
});

// generate check boxinputs for summary statistics table
function checkboxRenderer(value) {
    var checkboxControl = '<input type="checkbox"' + 'class="includeFeature" value="includeFeature"';
    if (value) {      
        checkboxControl = checkboxControl + "checked />";
    } else {
        checkboxControl = checkboxControl + "/>";
    }
    return checkboxControl;
}; 

// generate dropdown inputs for summary statistics table
function listSelectionRenderer(list, selectedOption, cssClass) {
    var selection = "<select class=" + cssClass + ">";
    for (var item in list){
        if (selectedOption.toUpperCase() == list[item].toUpperCase()) {
            selection = selection + "<option selected value=\"" + list[item] + "\">" + list[item] + "</option>";
        } else {
            selection = selection + "<option value=\"" + list[item] + "\">" + list[item] + "</option>";
        }
    }
    selection = selection + "</select>";
    return selection;
}

function drawSummaryStatistics() {

    $('.summaryStatistics').each(function() {
        var jsonObj = $(this).data('summarystatistics');
        // clear text in this cell and draw graphs
        $(this).text("");

        //get feature type
        var closestTr = $(this).closest('tr');
        var FeatureType = closestTr.find('.fieldType option:selected').text();

        var frequencies = jsonObj[0].values;
        
        // transform dataset
        var dataArray = $.map(frequencies, function(value, index) {
            return value[1];
        });
        
        if (FeatureType == 'CATEGORICAL'){          
            
            var w = 40;
            var h = 40;
            var pie = d3.layout.pie();
            
            var outerRadius = w / 2;
            var innerRadius = 0;
            var arc = d3.svg.arc()
                            .innerRadius(innerRadius)
                            .outerRadius(outerRadius);

              var svg = d3.select(this)
                        .append("svg")
                        .attr("width", w)
                        .attr("height", h)
		    			.attr("class", "pieChart");

              var arcs = svg.selectAll("g.arc")
                    .data(pie(dataArray))
                    .enter()
                    .append("g")
                    .attr("class", "arc")
                    .attr("transform", "translate(" + outerRadius + ", " + outerRadius + ")");

               //var color = d3.scale.ordinal().range(["#D59C0C", "#3C2B02", '#614705', '#FFD64A', '#7A5C0F', '#FFF869', '#A8801C', '#F0D74C', '#D9AE21', '#FFC400', '#D9A90A', '#BFB011', '#B29E47', '#FFD64A', '#C6B902', '#C68202', '#95773B', '#8F6908', '#4F3903', '#FFDA00']);
               var color = d3.scale.ordinal().range(["#1395ba", "#117899", "#0f5b78", "#0d3c55", "#c02e1d", "#d94e1f", "#f16c20", "#ef8b2c", "#ecaa38", "#ebc844", "a2b86c", "5ca793"]);               
               
              arcs.append("path")
                .attr("fill", function(d, i) {
                    return color(i);
                })
                .attr("d", arc);
            
        }
        else {
            
            var w = 200;
            var h = 40;                 
            var barPadding = 1;
            
            // scaling this y-axis using a linear scaler 
            var yScale = d3.scale.linear()
                          .domain([0, d3.max(dataArray, function(d) {
                             return d;
                           })])
                           .range([0,h]);
            
            var svg = d3.select(this)
            .append("svg")
            .attr("width", w)
            .attr("height", h)
			.attr("class", "barChart");
            
            svg.selectAll("rect")
                .data(dataArray)
                .enter()
                .append("rect")
                .attr("x", function(d, i) {
                    return i * (w / dataArray.length);
                })
                .attr("y", function(d) {
                    return h - yScale(d);
                })
                .attr("width", w / dataArray.length - barPadding)
                .attr("height", function(d) {
                    return yScale(d);
                })
                .attr("fill", '#f16c20');
        }
    });
}

</script>

</body>
</html>
